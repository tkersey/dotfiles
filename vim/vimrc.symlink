if empty(glob('~/.vim/autoload/plug.vim'))
  execute '!curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall | source ~/.vimrc
endif

call plug#begin()
Plug 'ajh17/VimCompletesMe'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'ap/vim-buftabline'
Plug 'beikome/cosme.vim'
Plug 'mg979/vim-visual-multi', {'branch': 'master'}
Plug 'mhinz/vim-signify'
Plug 'pangloss/vim-javascript'
Plug 'tpope/vim-unimpaired'
Plug 'dense-analysis/ale'
Plug 'tpope/vim-eunuch'
call plug#end()

filetype indent on         " load filetype specific indent files

syntax enable              " enable syntax processing
colorscheme cosme

set t_Co=256               " enables 256 colors

set expandtab              " tabs are spaces
set tabstop=2              " number of visual spaces per TAB
set softtabstop=2          " number of spaces in tab when editing
set shiftwidth=2           " number of spaces used when indenting

set number                 " show line numbers
set autoindent             " enables auto indent

set clipboard=unnamed      " use system clipboard

set backupdir=/private/tmp " moves backups to tmp directory
set directory=/private/tmp " moves swaps to tmp directory

set incsearch              " search as characters are entered
set hlsearch               " highlight matches

let mapleader=","          " leader is comma


runtime macros/matchit.vim " matchit

" keybindings
nnoremap <leader><space> :Files<CR>
nnoremap <leader>p :bprev<CR>
nnoremap <leader>n :bnext<CR>

" ctrl+x for cut
vmap <C-x> :!pbcopy<cr>

" ctrl+c for copy
vmap <C-c> :w !pbcopy<cr><cr>

" persistent undo
set undofile
set undodir=~/.vim/undodir/

" Buftabline
set hidden

set backspace=indent,eol,start

" Swift
augroup filetype
  au! BufRead,BufNewFile *.swift set ft=swift
augroup END

" ALE
let g:ale_sign_warning = '⚠️'
let g:ale_sign_error = '❌'
let g:ale_javascript_eslint_executable = 'eslint_d --cache'
